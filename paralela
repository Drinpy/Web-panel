o algoritmo distribuido é meio parecido, a diferença é que ele se baseia nos clocks lógicos
pra implementar ele precisa de menos esforço pq ele aproveita a lógica dos clocks pro sistema
que é justamente a vantagem: reaproveitamento do protocolo dos clocks lógicos pra fzr o gerenciamento dos recursos
a desvantagem é que requer mta troca de msg e se algum dispositivo para de funcionar o protocolo de sincronização pode parar de funcionar
como eu disse precisa de menos esforço de desenvolvimento
e é bom pra sistemas de pequena escala só
garante que não tem deadlock pq ele usa os tempos de clock nas requisições e aí ele decide quais processos tem acesso a quais recursos
a requisição que tiver menor tempo de clock na req ganha
nao tem starvation ´q o tempo de clock é armazenado da requisição e entra na fila de todo mundo que ta interessado nesse mesmo recurso
entao nao tem concorrencia direta tlgd
e é igual e justo pelo mesmo motivo do centralizado
o token-ring é o mai da hr
ele cria uma """"estrutura""" kekeke
estrutura virtual ciclica
o centralziado e o distri.. n eh algoritmo de coordenação de acesso?
aí pra cada recurso compartilhado ele gera um token
essa dúvida aí é o que eu mandei pro iago ontem a noite
ou eh exclusão mutua
mandei no grups lá
é de coordenação de acesso, mas eles implementam a exclusão mútua
que é sobre o que tamo fld, aparentemente
tendi
aí o token fica rodando na "estrutura"
a vantagem é que é simples de implementar e nao precisa de um processo coordenador se nao quiser
pq a estrutura já lida com as parada
o gerenciamento é feito de forma separada
pelos token
a desvantagem é que se algum dispositivo ou aplicação cair demora pro middleware ou pro proprio sistema perceber que alguem caiu e que o token se perdeu
nao é indicado em alguns casos
tipo quando nao tem mto uso de recurso, pq aí nao faz sentido ficar rodando esse bando de token na rede a toa se ngm usa 
é bom usar em sistemas que nao tem como eleger um coordenador
e nao precisa centralizar as ações de coordenação num unico pc
o deadlock é evitado justamente pcausa dos token tbm, só o processo que tem posse do token pode acessar o recurso
e o starvation nao acontece pq os token tao sempre rodando
se o processo quer acessar ele só pega o token pra ele e faz o acesso
e a equidade e justiça é garantida pq os tokens passam por TODOS os componentes do sistema
sem preferencia, nao tem prioridade nenhuma
é isto
